@startuml
!include architecture_overview.wsd

class Spiel {
    -spielerListe: Spieler[]
    -ladenListe: Laden[]
    -warenListe: Kartenstapel<Warenkarte>[]
    -schwarzmarkt: Schwarzmarkt
    -lieferwagen: Kartenstapel<Lieferkarte>
    -muelleimer: Kartenstapel<Lieferkarte>

    +spielverlauf(): void
    -anstellenInDenWarteschlangen(): void
    -warenlieferung(): void
    -draengelei(): void
    -ladenoeffnung(): void
    -tauschenAufDemMarkt(): void
    -aufraeumphase(): void

    -samstag(): void
}
class Spieler {
    -farbe: Farbe
    -spielfiguren: ArrayList<Spielfigur>
    -einkaufszettel: Einkaufszettel
    -warenkarten: ArrayList<Warenkarte>
    -aktionskarten: ArrayList<Aktionskarte>

    +setzeSpielfigur(): void 
    +hatFreieSpielfigur(): boolean
    +istFertig(): boolean
}
class Spekulant {
    -schwarzmarkt: Schwarzmarkt
}
class Spielerfigur {
    -spieler: Spieler
}
abstract class Spielfigur {
    -farbe: Farbe
}
abstract class Liste {
    (ArrayList)
}
class Kartenstapel<Spielkarte> {
    -pop(): Spielkarte
    -push(object: Spielkarte)
}
class Warteschlange<Spielfigur> {
    -pop(): Spielfigur
    -push(object: Spielfigur)

    +reverse(): void
    +move(from: int, to: int): void
    +remove(index: int): void
}
abstract class Karte {
    ...
}
abstract class Spielkarte {
    -name: String
    -farbe: Farbe
    -bild: Bild
    -beschreibung: String
    ...
}
class Einkaufszettel {
    -warentypen: Warentyp[]
    
    +gibAnzahl(warentyp: Warentyp): int
}
class Warenkarte {
    -warentyp: Warentyp
}
class Lieferkarte {
    -warentyp: Warentyp
    -anzahl: int
}
class Aktionskarte {
    ...
}
abstract class Laden {
    -warteschlange: Warteschlange
    -gibErstePosition(): Spieler

}
class Warenladen {
    -warentyp: Warentyp
    -marktfeld: Kartenstapel

}
class Schwarzmarkt {
    -marktfrau: int
    -marktfelder: Kartenstapel[]

    +gibMarktfrauFeld(warentyp: Warentyp): int
    +verschiebeMarktfrau(): void
}
@enduml